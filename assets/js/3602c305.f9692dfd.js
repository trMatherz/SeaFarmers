"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7293],{18232:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>d,contentTitle:()=>m,default:()=>x,frontMatter:()=>c,metadata:()=>s,moduleId:()=>h,toc:()=>u});const s=JSON.parse('{"id":"solutions/Novice/RunningMiles","title":"RunningMiles","description":"Tags: Prefix Sums","source":"@site/docs/solutions/Novice/RunningMiles.mdx","sourceDirName":"solutions/Novice","slug":"/solutions/Novice/RunningMiles","permalink":"/SeaFarmers/docs/solutions/Novice/RunningMiles","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"Permutator","permalink":"/SeaFarmers/docs/solutions/Novice/Permutator"},"next":{"title":"SleepyCowHerding","permalink":"/SeaFarmers/docs/solutions/Novice/SleepyCowHerding"}}');var a=i(74848),t=i(28453),r=(i(96540),i(42407),i(28092)),l=i(38866),o=i(40426);const c={},m="Running Miles Solution",d={},h="Novice",u=[];function p(n){const e={annotation:"annotation",h1:"h1",header:"header",math:"math",mi:"mi",mo:"mo",mrow:"mrow",p:"p",semantics:"semantics",span:"span",...(0,t.R)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(r.A,{moduleId:h}),"\n",(0,a.jsx)(e.header,{children:(0,a.jsx)(e.h1,{id:"running-miles-solution",children:"Running Miles Solution"})}),"\n",(0,a.jsx)(e.p,{children:"Tags: Prefix Sums"}),"\n",(0,a.jsx)(e.h1,{id:"breakdown",children:"Breakdown"}),"\n",(0,a.jsx)(e.p,{children:"Maintain both a prefix and suffix array that find the best for the left and right."}),"\n",(0,a.jsxs)(e.p,{children:["This runs in ",(0,a.jsxs)(e.span,{className:"katex",children:[(0,a.jsx)(e.span,{className:"katex-mathml",children:(0,a.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(e.semantics,{children:[(0,a.jsxs)(e.mrow,{children:[(0,a.jsx)(e.mi,{mathvariant:"script",children:"O"}),(0,a.jsx)(e.mo,{stretchy:"false",children:"("}),(0,a.jsx)(e.mi,{children:"n"}),(0,a.jsx)(e.mo,{stretchy:"false",children:")"})]}),(0,a.jsx)(e.annotation,{encoding:"application/x-tex",children:"\\mathcal{O}(n)"})]})})}),(0,a.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,a.jsxs)(e.span,{className:"base",children:[(0,a.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,a.jsx)(e.span,{className:"mord mathcal",style:{marginRight:"0.02778em"},children:"O"}),(0,a.jsx)(e.span,{className:"mopen",children:"("}),(0,a.jsx)(e.span,{className:"mord mathnormal",children:"n"}),(0,a.jsx)(e.span,{className:"mclose",children:")"})]})})]})]}),"\n",(0,a.jsx)(e.h1,{id:"implementation",children:"Implementation"}),"\n",(0,a.jsx)("div",{style:{transform:"translateX(150px)"},children:(0,a.jsx)(l.A,{language:"cpp",style:o.A,children:"#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream> \n#include <algorithm>\nusing namespace std;\n\nvoid solve() {\n  int n; cin >> n; \n  vector<ll> a(n); for(int i = 0; i < n; i++) cin >> a[i]; \n  vector<ll> pre(n), suf(n); \n  for(int i = 0; i < n; i++) {\n      pre[i] = a[i] + i; \n      suf[i] = a[i] - i; \n  }\n  for(int i = 1; i < n; i++) pre[i] = max(pre[i], pre[i - 1]); \n  for(int i = n - 2; i >= 0; i--) suf[i] = max(suf[i], suf[i + 1]); \n  ll an = 0; \n  for(int i = 1; i < n - 1; i++) an = max(an, pre[i - 1] + suf[i + 1] + a[i]); \n  cout << an << endl;\n}\n\nint main() {\n  int t; cin >> t; \n  while(t--) solve(); \n}\n"})})]})}function x(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(p,{...n})}):p(n)}}}]);