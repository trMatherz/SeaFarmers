"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7093],{61151:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>m,metadata:()=>a,moduleId:()=>h,toc:()=>p});const a=JSON.parse('{"id":"solutions/Novice/SleepyCowHerding","title":"SleepyCowHerding","description":"Tags: 2P","source":"@site/docs/solutions/Novice/SleepyCowHerding.mdx","sourceDirName":"solutions/Novice","slug":"/solutions/Novice/SleepyCowHerding","permalink":"/SeaFarmers/docs/solutions/Novice/SleepyCowHerding","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"Permutator","permalink":"/SeaFarmers/docs/solutions/Novice/Permutator"},"next":{"title":"SubarraySumsI","permalink":"/SeaFarmers/docs/solutions/Novice/SubarraySumsI"}}');var i=s(74848),t=s(28453),l=(s(96540),s(42407),s(28092)),r=s(38866),c=s(40426);const m={},o="Sleepy Cow Herding Solution",d={},h="Novice",p=[];function x(n){const e={annotation:"annotation",h1:"h1",header:"header",math:"math",mi:"mi",mn:"mn",mo:"mo",mrow:"mrow",p:"p",semantics:"semantics",span:"span",...(0,t.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(l.A,{moduleId:h}),"\n",(0,i.jsx)(e.header,{children:(0,i.jsx)(e.h1,{id:"sleepy-cow-herding-solution",children:"Sleepy Cow Herding Solution"})}),"\n",(0,i.jsx)(e.p,{children:"Tags: 2P"}),"\n",(0,i.jsx)(e.h1,{id:"breakdown",children:"Breakdown"}),"\n",(0,i.jsxs)(e.p,{children:["Notwithstanding edge cases, we can see that all n values must end up in a line. This means that we can usually move\nthe ends to these spots. Thus, it is the min of the amount of spaces between two cows ",(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mi,{children:"n"}),(0,i.jsx)(e.mo,{children:"\u2212"}),(0,i.jsx)(e.mn,{children:"1"})]}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"n - 1"})]})})}),(0,i.jsxs)(e.span,{className:"katex-html","aria-hidden":"true",children:[(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"0.6667em",verticalAlign:"-0.0833em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"n"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,i.jsx)(e.span,{className:"mbin",children:"\u2212"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"0.6444em"}}),(0,i.jsx)(e.span,{className:"mord",children:"1"})]})]})]})," away."]}),"\n",(0,i.jsx)(e.p,{children:"The max value can easily be calculated."}),"\n",(0,i.jsxs)(e.p,{children:["This runs in ",(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mi,{mathvariant:"script",children:"O"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"("}),(0,i.jsx)(e.mi,{children:"n"}),(0,i.jsx)(e.mo,{stretchy:"false",children:")"})]}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"\\mathcal{O}(n)"})]})})}),(0,i.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathcal",style:{marginRight:"0.02778em"},children:"O"}),(0,i.jsx)(e.span,{className:"mopen",children:"("}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"n"}),(0,i.jsx)(e.span,{className:"mclose",children:")"})]})})]})]}),"\n",(0,i.jsx)(e.h1,{id:"implementation",children:"Implementation"}),"\n",(0,i.jsx)("div",{style:{transform:"translateX(150px)"},children:(0,i.jsx)(r.A,{language:"cpp",style:c.A,children:'#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <fstream>\nstd::ifstream cin("herding.in");\nstd::ofstream cout("herding.out");\n#include <algorithm>\nusing namespace std;\n\nint main() {\n  int n; cin >> n; \n  vector<int> a(n); \n  for(int i = 0; i < n; i++) cin >> a[i]; \n  sort(a.begin(), a.end()); \n  int an1 = n, an2 = n; \n  int r = 0; \n  for(int i = 0; i < n; i++) {\n      while(r < n && a[r] < a[i] + n) r++;  \n      emin(an1, n - (r - i)); \n  }\n  an2 = max(a[n - 2] - a[0], a[n - 1] - a[1]) - n + 2; \n  if(a[n - 2] - a[0] == n - 2 && a[n - 1] - a[n - 2] > 2) an1 = 2; \n  if(a[n - 1] - a[1] == n - 2 && a[1] - a[0] > 2) an1 = 2; \n  cout << an1 << endl << an2 << endl;\n}\n'})})]})}function u(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(x,{...n})}):x(n)}}}]);