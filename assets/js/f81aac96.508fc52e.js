"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5738],{870:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>h,default:()=>p,frontMatter:()=>d,metadata:()=>a,moduleId:()=>m,toc:()=>x});const a=JSON.parse('{"id":"solutions/LearnToCode/WhyDidTheCowCrossTheRoad","title":"WhyDidTheCowCrossTheRoad","description":"Tags: Vectors","source":"@site/docs/solutions/LearnToCode/WhyDidTheCowCrossTheRoad.mdx","sourceDirName":"solutions/LearnToCode","slug":"/solutions/LearnToCode/WhyDidTheCowCrossTheRoad","permalink":"/SeaFarmers/docs/solutions/LearnToCode/WhyDidTheCowCrossTheRoad","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"WhosOlder","permalink":"/SeaFarmers/docs/solutions/LearnToCode/WhosOlder"},"next":{"title":"BlockGame","permalink":"/SeaFarmers/docs/solutions/Novice/BlockGame"}}');var o=n(4848),t=n(8453),i=(n(6540),n(2407),n(8092)),r=n(8866),c=n(426);const d={},h="Why Did The Cow Cross The Road Solution",l={},m="LearnToCode",x=[];function u(e){const s={annotation:"annotation",h1:"h1",header:"header",math:"math",mi:"mi",mo:"mo",mrow:"mrow",p:"p",semantics:"semantics",span:"span",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(i.A,{moduleId:m}),"\n",(0,o.jsx)(s.header,{children:(0,o.jsx)(s.h1,{id:"why-did-the-cow-cross-the-road-solution",children:"Why Did The Cow Cross The Road Solution"})}),"\n",(0,o.jsx)(s.p,{children:"Tags: Vectors"}),"\n",(0,o.jsx)(s.h1,{id:"breakdown",children:"Breakdown"}),"\n",(0,o.jsx)(s.p,{children:"We can simulate this process using a vector to keep track of which side of the road a cow is on.\nIf we havn't seen the cow, they are at -1."}),"\n",(0,o.jsxs)(s.p,{children:["This runs in ",(0,o.jsxs)(s.span,{className:"katex",children:[(0,o.jsx)(s.span,{className:"katex-mathml",children:(0,o.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,o.jsxs)(s.semantics,{children:[(0,o.jsxs)(s.mrow,{children:[(0,o.jsx)(s.mi,{mathvariant:"script",children:"O"}),(0,o.jsx)(s.mo,{stretchy:"false",children:"("}),(0,o.jsx)(s.mi,{children:"n"}),(0,o.jsx)(s.mo,{stretchy:"false",children:")"})]}),(0,o.jsx)(s.annotation,{encoding:"application/x-tex",children:"\\mathcal{O}(n)"})]})})}),(0,o.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,o.jsxs)(s.span,{className:"base",children:[(0,o.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,o.jsx)(s.span,{className:"mord mathcal",style:{marginRight:"0.02778em"},children:"O"}),(0,o.jsx)(s.span,{className:"mopen",children:"("}),(0,o.jsx)(s.span,{className:"mord mathnormal",children:"n"}),(0,o.jsx)(s.span,{className:"mclose",children:")"})]})})]})]}),"\n",(0,o.jsx)(s.h1,{id:"implementation",children:"Implementation"}),"\n",(0,o.jsx)("div",{style:{transform:"translateX(150px)"},children:(0,o.jsx)(r.A,{language:"cpp",style:c.A,children:'#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <fstream>\nstd::ifstream cin ("crossroad.in");\nstd::ofstream cout ("crossroad.out");\n#include <algorithm>\nusing namespace std;\n\n\n\nint main() {\n  int n; cin >> n; \n  int an = 0; \n  vector<int> a(10, -1); \n  for(int i = 0; i < n; i++) {\n      int x, y; \n      cin >> x >> y; \n      x--; \n      if(a[x] != -1 && a[x] != y) an++; // check if on the other side\n      a[x] = y; \n  }\n  cout << an;\n}\n'})})]})}function p(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,o.jsx)(s,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}}}]);