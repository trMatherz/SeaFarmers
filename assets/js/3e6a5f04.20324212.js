"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5157],{45734:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>m,default:()=>u,frontMatter:()=>o,metadata:()=>a,moduleId:()=>h,toc:()=>p});const a=JSON.parse('{"id":"solutions/Novice/HaybaleStacking","title":"HaybaleStacking","description":"Tags: Prefix Sums","source":"@site/docs/solutions/Novice/HaybaleStacking.mdx","sourceDirName":"solutions/Novice","slug":"/solutions/Novice/HaybaleStacking","permalink":"/SeaFarmers/docs/solutions/Novice/HaybaleStacking","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"Handshake","permalink":"/SeaFarmers/docs/solutions/Novice/Handshake"},"next":{"title":"JuryMarks","permalink":"/SeaFarmers/docs/solutions/Novice/JuryMarks"}}');var i=s(74848),t=s(28453),r=(s(96540),s(42407),s(28092)),c=s(38866),l=s(40426);const o={},m="Haybale Stacking Solution",d={},h="Novice",p=[];function x(e){const n={annotation:"annotation",h1:"h1",header:"header",math:"math",mi:"mi",mo:"mo",mrow:"mrow",p:"p",semantics:"semantics",span:"span",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.A,{moduleId:h}),"\n",(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"haybale-stacking-solution",children:"Haybale Stacking Solution"})}),"\n",(0,i.jsx)(n.p,{children:"Tags: Prefix Sums"}),"\n",(0,i.jsx)(n.h1,{id:"breakdown",children:"Breakdown"}),"\n",(0,i.jsx)(n.p,{children:"Use the concept of prefix arrays to generate the array quickly. Then, sort."}),"\n",(0,i.jsxs)(n.p,{children:["This runs in ",(0,i.jsxs)(n.span,{className:"katex",children:[(0,i.jsx)(n.span,{className:"katex-mathml",children:(0,i.jsx)(n.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(n.semantics,{children:[(0,i.jsxs)(n.mrow,{children:[(0,i.jsx)(n.mi,{mathvariant:"script",children:"O"}),(0,i.jsx)(n.mo,{stretchy:"false",children:"("}),(0,i.jsx)(n.mi,{children:"n"}),(0,i.jsx)(n.mo,{stretchy:"false",children:")"})]}),(0,i.jsx)(n.annotation,{encoding:"application/x-tex",children:"\\mathcal{O}(n)"})]})})}),(0,i.jsx)(n.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(n.span,{className:"base",children:[(0,i.jsx)(n.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(n.span,{className:"mord mathcal",style:{marginRight:"0.02778em"},children:"O"}),(0,i.jsx)(n.span,{className:"mopen",children:"("}),(0,i.jsx)(n.span,{className:"mord mathnormal",children:"n"}),(0,i.jsx)(n.span,{className:"mclose",children:")"})]})})]})]}),"\n",(0,i.jsx)(n.h1,{id:"implementation",children:"Implementation"}),"\n",(0,i.jsx)("div",{style:{transform:"translateX(150px)"},children:(0,i.jsx)(c.A,{language:"cpp",style:l.A,children:"#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream> \n#include <algorithm>\nusing namespace std;\n\n\nint main() {\n  int n, m; cin >> n >> m; \n  vector<int> pre(n + 1, 0); \n  for(int i = 0; i < m; i++) {\n      int x, y; cin >> x >> y; \n      pre[x - 1]++, pre[y]--; \n  }\n  for(int i = 0; i < n; i++) pre[i + 1] += pre[i]; \n  pre.pop_back(); \n  sort(pre.begin(), pre.end()); \n  cout << pre[n / 2] << endl;\n}\n"})})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(x,{...e})}):x(e)}}}]);