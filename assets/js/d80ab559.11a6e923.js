"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3835],{93275:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>d,contentTitle:()=>m,default:()=>x,frontMatter:()=>o,metadata:()=>i,moduleId:()=>h,toc:()=>u});const i=JSON.parse('{"id":"solutions/Novice/StaticRangeSums","title":"StaticRangeSums","description":"Tags: Prefix Sums","source":"@site/docs/solutions/Novice/StaticRangeSums.mdx","sourceDirName":"solutions/Novice","slug":"/solutions/Novice/StaticRangeSums","permalink":"/SeaFarmers/docs/solutions/Novice/StaticRangeSums","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"SocialDistancing","permalink":"/SeaFarmers/docs/solutions/Novice/SocialDistancing"},"next":{"title":"SubarraySumsI","permalink":"/SeaFarmers/docs/solutions/Novice/SubarraySumsI"}}');var a=s(74848),t=s(28453),r=(s(96540),s(42407),s(28092)),c=s(38866),l=s(40426);const o={},m="Static Range Sums Solution",d={},h="Novice",u=[];function p(n){const e={annotation:"annotation",h1:"h1",header:"header",math:"math",mi:"mi",mo:"mo",mrow:"mrow",p:"p",semantics:"semantics",span:"span",...(0,t.R)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(r.A,{moduleId:h}),"\n",(0,a.jsx)(e.header,{children:(0,a.jsx)(e.h1,{id:"static-range-sums-solution",children:"Static Range Sums Solution"})}),"\n",(0,a.jsx)(e.p,{children:"Tags: Prefix Sums"}),"\n",(0,a.jsx)(e.h1,{id:"breakdown",children:"Breakdown"}),"\n",(0,a.jsx)(e.p,{children:"Very basic prefix sums."}),"\n",(0,a.jsxs)(e.p,{children:["This runs in ",(0,a.jsxs)(e.span,{className:"katex",children:[(0,a.jsx)(e.span,{className:"katex-mathml",children:(0,a.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(e.semantics,{children:[(0,a.jsxs)(e.mrow,{children:[(0,a.jsx)(e.mi,{mathvariant:"script",children:"O"}),(0,a.jsx)(e.mo,{stretchy:"false",children:"("}),(0,a.jsx)(e.mi,{children:"n"}),(0,a.jsx)(e.mo,{stretchy:"false",children:")"})]}),(0,a.jsx)(e.annotation,{encoding:"application/x-tex",children:"\\mathcal{O}(n)"})]})})}),(0,a.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,a.jsxs)(e.span,{className:"base",children:[(0,a.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,a.jsx)(e.span,{className:"mord mathcal",style:{marginRight:"0.02778em"},children:"O"}),(0,a.jsx)(e.span,{className:"mopen",children:"("}),(0,a.jsx)(e.span,{className:"mord mathnormal",children:"n"}),(0,a.jsx)(e.span,{className:"mclose",children:")"})]})})]})]}),"\n",(0,a.jsx)(e.h1,{id:"implementation",children:"Implementation"}),"\n",(0,a.jsx)("div",{style:{transform:"translateX(150px)"},children:(0,a.jsx)(c.A,{language:"cpp",style:l.A,children:"#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream> \n#include <algorithm>\nusing namespace std;\n\nint main() {\n  int n, q; cin >> n >> q; \n  vector<long long> a(n, 0); \n  for(int i = 0; i < n; i++) cin >> a[i]; \n  vector<long long> pre(n + 1, 0); \n  for(int i = 0; i < n; i++) pre[i + 1] = pre[i] + a[i]; \n  for(int i = 0; i < q; i++) {\n      int x, y; cin >> x >> y;\n      cout << pre[y] - pre[x] << endl;\n  }\n}\n"})})]})}function x(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(p,{...n})}):p(n)}}}]);